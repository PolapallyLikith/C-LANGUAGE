//minmum depth of bst
---------------------------------------------------------------------------------------------

#include <stdio.h>
#include<stdlib.h>
struct Node
{
    int data;
    struct Node *left;
    struct Node *right;
};
struct Node *createNewNode(int data)
{
    struct Node *NewNode=(struct Node *)malloc(sizeof(struct Node));
    NewNode->data=data;
    NewNode->left=NULL;
    NewNode->right=NULL;
    return NewNode;
}
struct Node *insert(struct Node *root,int data)
{
    if(root==NULL)
    return createNewNode(data);
    else
    {
        if(data>root->data)
        {
            root->right=insert(root->right,data);
        }
        else if(data<root->data)
        {
            root->left=insert(root->left,data);
        }
        else
        printf("Insertion not possible");
    }
    return root;
}
int minimum(int a,int b)
{
    return a>b?b:a;
}
int minDepth(struct Node *root)
{
   
    if (root==NULL)
    return 0;
    else
    {
        if(root->left==NULL && root->right==NULL)
        return 1;
         if(root->right==NULL)
        {
            return minDepth(root->left)+1;
        }
        if(root->right==NULL)
        return minDepth(root->left)+1;
        return minimum(minDepth(root->left),minDepth(root->right))+1;
             
    }
}

int main() {
struct Node *root=NULL;
root=insert(root,10);
root=insert(root,5);
root=insert(root,15);
//root=insert(root,2);
//root=insert(root,8);
root=insert(root,12);
root=insert(root,18);
    int mindepth;
    mindepth=minDepth(root);
    printf("%d",mindepth);
return 0;
}
